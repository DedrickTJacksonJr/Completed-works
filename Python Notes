import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns ; sns.set()
plt.style.use('seaborn-whitegrid')

from sklearn.datasets.samples_generator import make_blobs
x, y_true = make_blobs(n_samples= 500, center=5, cluster_std=0.60, random_state= 0)
x.shape
y_true
plt.scatter(x[:, 1],x[:,0])
from sklearn.cluster import KMeans
kmeans_model = KMeans(n_clusters=5)
kmeans_model.fit(x)
y_kmeans = kmeans_model.predict(x)
y_kmeans
plt.scatter(x[:, 0], x[:, 1], c = y_kmeans, s=5, cmap= 'viridas')
centers = kmeans_model.cluster_centers_
plt.scatter(centers[:,0],centers[:, 1], c='black', s=100, alpha=0.5)
x, y_true = make_moons(2, random_state= 0)
labels = KMeans(2,random_state=0).fit_predict(x)




from sklearn.cluster import SpectralClustering
model = SpectralClustering(n_clusters=2, affinity= 'nearest_neighbors')

plt.scatter(x[:,0], x[:,1], c=labels, a =50, cmap= 'viridis');

from sklearn.datasets import load_digits
digits= load_digits()
digits.data.shape
digits.image.shape

plt.imshow(digits.images[6], interpolation='nearest')

fig, ax = plt.subplots(10,10, figsize=(8,8))
for i, ax in enumerate(axes.flat):
    ax.imshow(digits.image[i], cmap= 'binary', interpolation='nearest')
